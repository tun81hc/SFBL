/*
 * SHE.c
 *
 *  Created on: Jun 18, 2019
 *      Author: AUP81HC
 */
#include "SHE.h"
#include "string.h"
#include "stdio.h"

static struct AES_ctx ctx;
HAL_StatusTypeDef status;

//Init
void CMD_INIT(uint8_t Key_ID, unsigned char Key[16])
{
	Select_Key(Key_ID, Key);
	AES_init_ctx(&ctx, Key);
}


//ECB Encryption Process
void CMD_ENC_ECB(uint8_t* Key, uint8_t* PlainText, uint8_t* CipherText)
{
	AES_ECB_encrypt(&ctx, PlainText, CipherText);
}


void CMD_DEC_ECB(uint8_t* CipherText)
{
	AES_ECB_decrypt(&ctx, CipherText);
}


//CBC Encryption Process
void CMD_ENC_CBC(uint8_t* Key,  uint32_t length, uint8_t* PlainText, uint8_t* CipherText)
{
	AES_CBC_encrypt_buffer(&ctx, PlainText, length, CipherText);
}



void CMD_DEC_CBC(uint8_t* Key, uint8_t* CipherText, uint32_t length)
{
	AES_CBC_decrypt_buffer(&ctx, CipherText, length);
}

//Generate Sub-keys
void CMD_GENERATE_MAC_START(uint8_t *Key, unsigned char K1[16], unsigned char K2[16])
{
	CMAC_Start(&ctx, Key, K1, K2);
}

//Update CMAC
void CMD_GENERATE_MAC_UPDATE(uint8_t *Key, uint8_t length, uint8_t* PlainText, uint8_t* MAC)
{

}

void CMD_GENERATE_MAC_FINISH(uint8_t *Key, uint8_t length, uint8_t* PlainText, uint8_t* MAC)
{

}




void Select_Key(uint8_t Key_ID, unsigned char Key[16])
{
 	unsigned char Key1[] = {0x2b,0x7e,0x15,0x16,0x28,0xae,0xd2,0xa6,0xab,0xf7,0x15,0x88,0x09,0xcf,0x4f,0x3c};


 	switch(Key_ID){
 	case 1:
 		memcpy(Key, Key1, 16);
 		break;

 	case 2:
 		break;

 	default:
 		break;

 	}
}
