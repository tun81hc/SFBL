/*
 * cmac.h
 *
 *  Created on: Jun 17, 2019
 *      Author: AUP81HC
 */

#ifndef CMAC_H_
#define CMAC_H_

unsigned char key_CMAC[] = {0x2b,0x7e,0x15,0x16,0x28,0xae,0xd2,0xa6,0xab,0xf7,0x15,0x88,0x09,0xcf,0x4f,0x3c};
unsigned char const_Zero[]={0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
unsigned char const_Rb[]={0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x87};



void Receive_UART(unsigned char RXbuff[256], int *lenRX);
void Verify_MAC(unsigned char* K, unsigned char* M, uint32_t len, unsigned char* input, unsigned char* Output);
void AES_CMAC(unsigned char* K, unsigned char* M, uint32_t len, unsigned char* T);
void splitting8to4(unsigned char value, unsigned char byte[2]);
void Hex2string(unsigned char* input, unsigned char* output);
void Generate_Subkey(unsigned char* key, unsigned char* key1, unsigned char* key2);
void XOR_16bytes(unsigned char *a, unsigned char *b, unsigned char *out);
void LeftShift_OneBit(unsigned char *input,unsigned char *output);
void padding( unsigned char *M_last, unsigned char *pad, uint32_t len);

void Delay1(int num);
void CMAC_Start(struct AES_ctx ctx, unsigned char* K, unsigned char K1[16], unsigned char K2[16]);
void CMAC_Update(struct AES_ctx ctx, unsigned char* M, unsigned char X[16]);
void CMAC_Finish(struct AES_ctx ctx, unsigned char* K1, unsigned char* K2, unsigned char* M, uint32_t len, unsigned char T[16]);

#endif /* CMAC_H_ */
